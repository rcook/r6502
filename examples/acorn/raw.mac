.macro raw_write_str s
.importzp OSAREG
.local @done
.local @loop
.ifblank s
    .error "s undefined"
.endif
    lda #<s
    sta OSAREG
    lda #>s
    sta OSAREG + 1
    ldy #$00
@loop:
    lda (OSAREG), y
    beq @done
    jsr OSWRCH
    iny
    bne @loop
@done:
.endmacro

.macro raw_abort s
.local @s
.ifblank s
    syshalt $01
.else
    raw_write_str @s
    jsr OSNEWL
    syshalt $01
@s:
    .byte s, 0
.endif
.endmacro

.macro raw_not_impl s
.local @s
.ifblank s
    .error "s undefined"
.endif
    raw_write_str @s
    jsr OSNEWL
    syshalt $01
@s:
    .byte s, 0
.endmacro

; Example: raw_verify lda buffer, cmp #'A', "character not A"
.macro raw_verify op, condition, s
.local @s
.local @done
;.ifblank op
;    .error "op undefined"
;.endif
.ifblank condition
    .error "condition undefined"
.endif
    php
    op
    condition
    beq @done
    raw_abort s
@done:
    plp
.endmacro
