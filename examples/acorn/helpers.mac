.macro print_str addr
.ifblank addr
    .error "Must define addr"
.endif

    lda #<addr
    sta zword0
    lda #>addr
    sta zword0 + 1
    jsr print
.endmacro

; Example: verify lda buffer, cmp #'A', "character not A"
.macro verify op, condition, message
.ifblank op
    .error "Must define op"
.endif
.ifblank condition
    .error "Must define condition"
.endif
.ifblank message
    .error "Must define message"
.endif

.scope
    php
    op
    condition
    beq @ok
    print_str @m
    lda #$01
    syshalt
@m:
.byte "Assertion failed: ", message, 13, 10, 0
@ok:
    plp
.endscope
.endmacro

.macro assert op, condition, message
.ifblank op
    .error "Must define op"
.endif
.ifblank condition
    .error "Must define condition"
.endif
.ifblank message
    .error "Must define message"
.endif

.ifdef DEBUG
    verify op, condition, message
.endif
.endmacro

.macro read_char
.local @loop
@loop:
    lda KBDCR
    bpl @loop
    lda KBD
    and #$7F
.endmacro

.macro write_char
.local @loop
@loop:
    bit DSP
    bmi @loop
    sta DSP
.endmacro

.macro new_line
    php
    pha
    lda #LF
    write_char
    lda #CR
    write_char
    pla
    plp
.endmacro
